/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace forseti2
{
    public sealed class match_data : LCM.LCM.LCMEncodable
    {
        public bool IsBlueAlliance;
        public int TeamNumber;
        public String TeamName;
        public String FieldObjects;
 
        public match_data()
        {
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0x8d10fa2da8ff989aL;
 
        static match_data()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("forseti2.match_data"))
                return 0L;
 
            classes.Add("forseti2.match_data");
            ulong hash = LCM_FINGERPRINT_BASE
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            byte[] __strbuf = null;
            outs.Write(this.IsBlueAlliance); 
 
            outs.Write(this.TeamNumber); 
 
            __strbuf = System.Text.Encoding.GetEncoding("US-ASCII").GetBytes(this.TeamName); outs.Write(__strbuf.Length+1); outs.Write(__strbuf, 0, __strbuf.Length); outs.Write((byte) 0); 
 
            __strbuf = System.Text.Encoding.GetEncoding("US-ASCII").GetBytes(this.FieldObjects); outs.Write(__strbuf.Length+1); outs.Write(__strbuf, 0, __strbuf.Length); outs.Write((byte) 0); 
 
        }
 
        public match_data(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public match_data(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static forseti2.match_data _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            forseti2.match_data o = new forseti2.match_data();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            byte[] __strbuf = null;
            this.IsBlueAlliance = ins.ReadBoolean();
 
            this.TeamNumber = ins.ReadInt32();
 
            __strbuf = new byte[ins.ReadInt32()-1]; ins.ReadFully(__strbuf); ins.ReadByte(); this.TeamName = System.Text.Encoding.GetEncoding("US-ASCII").GetString(__strbuf);
 
            __strbuf = new byte[ins.ReadInt32()-1]; ins.ReadFully(__strbuf); ins.ReadByte(); this.FieldObjects = System.Text.Encoding.GetEncoding("US-ASCII").GetString(__strbuf);
 
        }
 
        public forseti2.match_data Copy()
        {
            forseti2.match_data outobj = new forseti2.match_data();
            outobj.IsBlueAlliance = this.IsBlueAlliance;
 
            outobj.TeamNumber = this.TeamNumber;
 
            outobj.TeamName = this.TeamName;
 
            outobj.FieldObjects = this.FieldObjects;
 
            return outobj;
        }
    }
}

